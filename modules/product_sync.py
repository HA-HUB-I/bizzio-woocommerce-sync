from modules.xml_parser import BizzioXMLParser
from modules.woo_api import WooCommerceAPI
from modules.bizzio_api import BizzioAPI

def sync_products():
    """–ò–∑–≤–ª–∏—á–∞ –∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–∞ –ø—Ä–æ–¥—É–∫—Ç–∏, –≤–∫–ª—é—á–∏—Ç–µ–ª–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ —Ñ–∞–π–ª–æ–≤–µ"""
    bizzio_api = BizzioAPI()
    xml_source = bizzio_api.get_articles()

    if xml_source is None:
        print("üî¥ –ù—è–º–∞ XML –æ—Ç–≥–æ–≤–æ—Ä –æ—Ç Bizzio API!")
        return

    parser = BizzioXMLParser(xml_source)
    woo_api = WooCommerceAPI()

    for batch in parser.get_products(batch_size=50):  # –û–±—Ä–∞–±–æ—Ç–≤–∞–º–µ –ø–æ 50 –ø—Ä–æ–¥—É–∫—Ç–∞ –Ω–∞–≤–µ–¥–Ω—ä–∂
        print(f"üöÄ –ò–∑–ø—Ä–∞—â–∞–Ω–µ –Ω–∞ –ø–∞—Ä—Ç–∏–¥–∞ –æ—Ç {len(batch)} –ø—Ä–æ–¥—É–∫—Ç–∞ –∫—ä–º WooCommerce...")
        for product in batch:
            woo_api.create_product(product)

    print("‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è—Ç–∞ –∑–∞–≤—ä—Ä—à–∏ —É—Å–ø–µ—à–Ω–æ!")


def sync_products_batch():
    """–ò–∑–≤–ª–∏—á–∞ –∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–∞ –ø—Ä–æ–¥—É–∫—Ç–∏ —á—Ä–µ–∑ WooCommerce batch API"""
    bizzio_api = BizzioAPI()
    xml_source = bizzio_api.get_articles()

    if xml_source is None:
        print("üî¥ –ù—è–º–∞ XML –æ—Ç–≥–æ–≤–æ—Ä –æ—Ç Bizzio API!")
        return

    parser = BizzioXMLParser(xml_source)
    woo_api = WooCommerceAPI()

    for batch in parser.get_products(batch_size=100):  # –û–±—Ä–∞–±–æ—Ç–≤–∞–º–µ –ø–æ 100 –ø—Ä–æ–¥—É–∫—Ç–∞
        print(f"üöÄ –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞ –ø–∞—Ä—Ç–∏–¥–∞ –æ—Ç {len(batch)} –ø—Ä–æ–¥—É–∫—Ç–∞...")

        create_list = []
        update_list = []
        delete_list = []  # –ú–æ–∂–µ–º –¥–∞ –¥–æ–±–∞–≤–∏–º –ª–æ–≥–∏–∫–∞ –∑–∞ –∏–∑—Ç—Ä–∏–≤–∞–Ω–µ, –∞–∫–æ –µ –Ω—É–∂–Ω–æ

        for product in batch:
            product_data = {
                "name": product["name"],
                "sku": product["barcode"],
                "regular_price": str(product["price"]),
                "stock_quantity": product["qty"],
                "categories": [{"id": 5}],  # –ü—Ä–æ–º–µ–Ω–µ—Ç–µ ID –∞–∫–æ –µ –Ω—É–∂–Ω–æ
                "meta_data": [{"key": f"prop_{i}", "value": v} for i, v in enumerate(product["props"])],
            }

            # –ü—Ä–æ–≤–µ—Ä—è–≤–∞–º–µ –¥–∞–ª–∏ –ø—Ä–æ–¥—É–∫—Ç—ä—Ç —Å—ä—â–µ—Å—Ç–≤—É–≤–∞
            existing_product = woo_api.get_product_by_sku(product["barcode"])
            if existing_product:
                product_data["id"] = existing_product["id"]
                update_list.append(product_data)
            else:
                create_list.append(product_data)

        # –ò–∑–ø—Ä–∞—â–∞–º–µ batch –∑–∞—è–≤–∫–∞
        woo_api.batch_process_products(create_products=create_list, update_products=update_list, delete_products=delete_list)

    print("‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å WooCommerce –∑–∞–≤—ä—Ä—à–∏ —É—Å–ø–µ—à–Ω–æ!")