import requests
from requests_oauthlib import OAuth1
from config.settings import WOO_API

class WooCommerceAPI:
    def __init__(self):
        self.base_url = WOO_API["BASE_URL"]
        self.auth = OAuth1(
            WOO_API["CONSUMER_KEY"],
            client_secret=WOO_API["CONSUMER_SECRET"]
        )

    def batch_process_products(self, create_products=[], update_products=[], delete_products=[]):
        """–û–±—Ä–∞–±–æ—Ç–≤–∞ –ø—Ä–æ–¥—É–∫—Ç–∏ –≤ WooCommerce –Ω–∞ –ø–∞—Ä—Ç–∏–¥–∏ —á—Ä–µ–∑ batch API"""
        url = f"{self.base_url}/batch"
        payload = {
            "create": create_products,
            "update": update_products,
            "delete": delete_products
        }

        response = requests.post(url, json=payload, auth=self.auth)
        if response.status_code in [200, 201]:
            print(f"üü¢ –£—Å–ø–µ—à–Ω–∞ batch –æ–±—Ä–∞–±–æ—Ç–∫–∞: {response.status_code}")
            return response.json()
        else:
            print(f"üî¥ –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ batch –∑–∞—è–≤–∫–∞: {response.status_code}")
            print(response.text)
            return None
    def get_product_by_sku(self, sku):
        """–¢—ä—Ä—Å–∏ –ø—Ä–æ–¥—É–∫—Ç –ø–æ SKU –≤ WooCommerce"""
        url = f"{self.base_url}?sku={sku}"
        response = requests.get(url, auth=self.auth)

        if response.status_code == 200:
            products = response.json()
            return products[0] if products else None
        else:
            print(f"üî¥ –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ —Ç—ä—Ä—Å–µ–Ω–µ –Ω–∞ SKU {sku}: {response.status_code}")
            return None
        

    def create_product(self, product):
        """–°—ä–∑–¥–∞–≤–∞ –Ω–æ–≤ –ø—Ä–æ–¥—É–∫—Ç –≤ WooCommerce –∏ –¥–æ–±–∞–≤—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, —Ñ–∞–π–ª–æ–≤–µ –∏ –º–µ—Ç–∞ –ø–æ–ª–µ—Ç–∞"""
        print(f"üõí –ò–∑–ø—Ä–∞—â–∞–Ω–µ –Ω–∞ –ø—Ä–æ–¥—É–∫—Ç –∫—ä–º WooCommerce: {product['name']}")

        # –†–∞–∑–¥–µ–ª—è–Ω–µ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ —Ñ–∞–π–ª–æ–≤–µ
        images = [file["url"] for file in product["files"] if file["url"].endswith((".png", ".jpg", ".jpeg"))]
        files = [file for file in product["files"] if not file["url"].endswith((".png", ".jpg", ".jpeg"))]

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è—Ç–∞ (–ø—ä—Ä–≤–æ—Ç–æ —Å—Ç–∞–≤–∞ –æ—Å–Ω–æ–≤–Ω–æ)
        product_images = [{"src": images[0]}] if images else []
        if len(images) > 1:
            product_images += [{"src": img} for img in images[1:]]

        # –î–æ–±–∞–≤—è–Ω–µ –Ω–∞ –º–µ—Ç–∞ –ø–æ–ª–µ—Ç–∞ –∑–∞ `props`
        meta_data = []
        for i, prop in enumerate(product["props"]):
            meta_data.append({"key": f"custom_prop_{i+1}", "value": prop})

        # –î–æ–±–∞–≤—è–Ω–µ –Ω–∞ —Ñ–∞–π–ª–æ–≤–µ –∫–∞—Ç–æ –º–µ—Ç–∞ –ª–∏–Ω–∫–æ–≤–µ
        for file in files:
            meta_data.append({"key": f"file_{file['name']}", "value": file["url"]})

        # WooCommerce –ø—Ä–æ–¥—É–∫—Ç–æ–≤–∏ –¥–∞–Ω–Ω–∏
        product_data = {
            "name": product["name"],
            "sku": product["barcode"],
            "regular_price": str(product["price"]),
            "stock_quantity": product["qty"],
            "categories": [{"id": 5}],  # –¢—É–∫ –º–æ–∂–µ –¥–∞ —Å–µ –¥–∏–Ω–∞–º–∏—á–Ω–æ –∏–∑–±–∏—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è
            "images": product_images,
            "meta_data": meta_data
        }

        

        # –ò–∑–ø—Ä–∞—â–∞–Ω–µ –Ω–∞ –∑–∞—è–≤–∫–∞ –∫—ä–º WooCommerce
        response = requests.post(self.base_url, json=product_data, auth=self.auth)

        if response.status_code == 201:
            print("üü¢ –ü—Ä–æ–¥—É–∫—Ç—ä—Ç –µ —Å—ä–∑–¥–∞–¥–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
            return response.json()
        else:
            print(f"üî¥ –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ —Å—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –ø—Ä–æ–¥—É–∫—Ç! –ö–æ–¥: {response.status_code}")
            print(response.text)
            return None
        
    
